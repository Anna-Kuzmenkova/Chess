//@author Timofey

#include "TXLib.h"

void drawQueen (int x, int y, int r, COLORREF color, COLORREF color1);


int main()
{
    txCreateWindow(1000, 800);
    drawQueen(50,100,20, RGB(0,0,0), RGB(255,255,255)); //размер королевы сделан в два раза меньше, чем короля. Поэтому переменная r у королевы должна быть ровно в 2 раза больше.
}

void drawQueen (int x, int y, int r, COLORREF color, COLORREF color1)
{
    txSetColor(color1 ,2);
    txSetFillColor (color);

    POINT head[24] = {{((5)*r)+x, ((0)*r)+y}, {((6)*r)+x, ((0)*r)+y}, {((6)*r)+x, ((1)*r)+y},
                      {((7)*r)+x, ((1)*r)+y}, {((7)*r)+x, ((2)*r)+y}, {((6)*r)+x, ((2)*r)+y},
                      {((6)*r)+x, ((4)*r)+y}, {((8)*r)+x, ((4)*r)+y}, {((6)*r)+x, ((5)*r)+y},
                      {((6)*r)+x, ((6)*r)+y}, {((7)*r)+x, ((6)*r)+y}, {((7)*r)+x, ((8)*r)+y},
                      {((6)*r)+x, ((10)*r)+y}, {((5)*r)+x, ((10)*r)+y}, {((4)*r)+x, ((8)*r)+y},
                      {((4)*r)+x, ((6)*r)+y}, {((5)*r)+x, ((6)*r)+y}, {((5)*r)+x, ((5)*r)+y},
                      {((3)*r)+x, ((4)*r)+y}, {((5)*r)+x, ((4)*r)+y}, {((5)*r)+x, ((2)*r)+y},
                      {((4)*r)+x, ((2)*r)+y}, {((4)*r)+x, ((1)*r)+y}, {((5)*r)+x, ((1)*r)+y}}; //"голова", меняется в зависимости от фигуры
    txPolygon (head, 24);

    POINT body[4] = {{(5*r)+x, (10*r)+y}, {(6*r)+x, (10*r)+y}, {(8*r)+x, (20*r)+y}, {(3*r)+x, (20*r)+y}}; //неизменяемое тело
    txPolygon (body, 4);

    POINT stand1[4] = {{(2*r)+x, (20*r)+y}, {(9*r)+x, (20*r)+y}, {(9*r)+x, (21*r)+y}, {(2*r)+x, (21*r)+y}}; //первая подставка для всех, а у пешек только она
    txPolygon (stand1, 4);

    POINT stand2[4] = {{(1*r)+x, (21*r)+y}, {(10*r)+x, (21*r)+y}, {(10*r)+x, (22*r)+y}, {(1*r)+x, (22*r)+y}}; //вторая подставка для средних(ладья,слон,конь) и лучших
    txPolygon (stand2, 4);

    POINT stand3[4] = {{(0*r)+x, (22*r)+y}, {(11*r)+x, (22*r)+y}, {(11*r)+x, (23*r)+y}, {(0*r)+x, (23*r)+y}};//третья подставка для лучших(ферзей, королей)
    txPolygon (stand3, 4);
}
